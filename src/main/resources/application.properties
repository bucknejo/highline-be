# DataSource settings: set here your own configurations for the database
# connection. In this example we have "netgloo_blog" as database name and
# "root" as username and password.
spring.datasource.url = jdbc:mysql://localhost:3306/redbone1_highline
spring.datasource.username = redbone1_hl
spring.datasource.password = highline

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Set the basic security settings
security.basic.enabled = false
security.user.name = user
security.user.password = password

# Context path and port
server.contextPath=/highline
server.port=8091

# Application Specific properties
highline.origin.ui = http://localhost:8090
highline.server.be = http://localhost:8091
highline.upload.base = Users/jbuckner/Uploads/highline/
highline.upload.resource = /uploads
highline.upload.paths = USER:images/user,RIDE:images/rides,SYSTEM:images/system